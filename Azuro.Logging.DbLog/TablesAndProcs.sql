use AbsaRewardsAudit
go

create schema [log]
go

/****** Object:  Table [log].[luCategory]    Script Date: 09/03/2009 08:29:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[log].[luCategory]') AND type in (N'U'))
BEGIN
CREATE TABLE [log].[luCategory](
	[ID] [smallint] NOT NULL,
	[Code] [nvarchar](20) NOT NULL,
	[Description] [nvarchar](100) NOT NULL,
 CONSTRAINT [PK_log.luCategory] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO

/****** Object:  Table [log].[LogEntry]    Script Date: 09/03/2009 08:28:40 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[log].[LogEntry]') AND type in (N'U'))
BEGIN
CREATE TABLE [log].[LogEntry](
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[Date] [datetime] NOT NULL,
	[CategoryID] [smallint] NOT NULL,
	[ThreadID] [bigint] NOT NULL,
	[Sender] [nvarchar](256) NULL,
	[AppDomain] [nvarchar](256) NULL,
	[Commandline] [nvarchar](512) NULL,
	[MachineName] [nvarchar](256) NULL,
	[LogName] [nvarchar](256) NULL,
	[Message] [nvarchar](max) NOT NULL,
 CONSTRAINT [PK_log.LogEntry] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[log].[FK_log.LogEntry_log.luCategory]') AND parent_object_id = OBJECT_ID(N'[log].[LogEntry]'))
ALTER TABLE [log].[LogEntry]  WITH CHECK ADD  CONSTRAINT [FK_log.LogEntry_log.luCategory] FOREIGN KEY([CategoryID])
REFERENCES [log].[luCategory] ([ID])
GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[log].[FK_log.LogEntry_log.luCategory]') AND parent_object_id = OBJECT_ID(N'[log].[LogEntry]'))
ALTER TABLE [log].[LogEntry] CHECK CONSTRAINT [FK_log.LogEntry_log.luCategory]
GO

delete from [log].[luCategory]
go

insert into [log].[luCategory]
	values (1, 'Fatal', 'Fatal Error, Execution Stops.')
insert into [log].[luCategory]
	values (2, 'Error', 'General Error.')
insert into [log].[luCategory]
	values (3, 'Warn', 'Warning.')
insert into [log].[luCategory]
	values (4, 'Info', 'Information Message.')
insert into [log].[luCategory]
	values (5, 'Debug', 'Debug Message.')
insert into [log].[luCategory]
	values (6, 'Trace', 'Trace Message.')

go

-- =============================================
-- Author:         JohannU
-- From:           ARCHIMONDE
-- Generated by:   My left hand
-- Create date:    2009/09/03
-- Description:    Insert Procedure for LogEntryEntity
-- =============================================

create procedure [log].[ListLogEntry]
(
	@StartDate		datetime = null,
	@EndDate		datetime = null,
	@Category		nvarchar(20) = null,
	@AppDomain		nvarchar(256) = null,
	@Sender			nvarchar(256) = null,
	@MachineName	nvarchar(256) = null,
	@LogName		nvarchar(256) = null,
	@ThreadID	int = 0
)

as

declare @CategoryID int
select @CategoryID = ID from [log].[luCategory]
	where Code = @Category

select le.[ID], le.[Date], le.[CategoryID], c.[Code], c.[Description] as CategoryDescription, 
		le.[ThreadID], le.[Sender], le.[AppDomain], le.Commandline, le.MachineName, le.LogName, le.[Message]
	from [log].[LogEntry] le
		inner join [log].[luCategory] c
			on le.CategoryID = c.ID
	where le.Date >= isnull(@StartDate, '1900/1/1')
		and le.Date <= isnull(@EndDate, GETDATE())
		and le.CategoryID = isnull(@CategoryID, le.CategoryID)
		and (le.AppDomain = isnull(@AppDomain, le.AppDomain)
			or (@AppDomain is null and le.AppDomain is null))
		and (le.Sender = isnull(@Sender, le.Sender)
			or (@Sender is null and le.Sender is null))
		and (@MachineName = isnull(@MachineName, MachineName)
			or (@MachineName is null and MachineName is null))
		and (@LogName = isnull(@LogName, LogName)
			or (@LogName is null and LogName is null))
		and ThreadID = isnull(@ThreadID, @ThreadID)
	
go

-- =============================================
-- Author:         JohannU
-- From:           ARCHIMONDE
-- Generated by:   My left hand
-- Create date:    2009/09/03
-- Description:    Insert Procedure for LogEntryEntity
-- =============================================

create procedure [log].[InsertLogEntry]
(
	@Category		nvarchar(20),
	@AppDomain		nvarchar(256),
	@MachineName	nvarchar(256),
	@LogName		nvarchar(256),
	@Commandline	nvarchar(512),
	@Sender			nvarchar(256),
	@ThreadId		int,
	@Message		nvarchar(max)
)

as

declare @CategoryID int
select @CategoryID = ID from .[log].[luCategory]
	where Code = @Category

insert into [log].[LogEntry]
	([Date], [CategoryID], [ThreadID], [Sender], [AppDomain], [MachineName], [LogName], [Commandline], [Message])
	values (getdate(), @CategoryID, @ThreadId, @Sender, @AppDomain, @MachineName, @LogName, @Commandline, @Message)
	
go