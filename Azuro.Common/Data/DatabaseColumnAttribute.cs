using System;

namespace Azuro.Data
{
   /// <summary>
   /// An attribute to describe a Database Column for use with the Azuro
   /// Data Access Layer.
   /// </summary>
   [AttributeUsage( AttributeTargets.Property, AllowMultiple = false )]
   public class DatabaseColumnAttribute : Attribute
   {
      /// <summary>
      /// Construct a Database column attribute. A name must always be set.
      /// </summary>
      /// <param name="columnName">The name of the column to map via this attribute.</param>
      public DatabaseColumnAttribute( string columnName )
      {
         ColumnName = columnName;
         ParameterName = columnName;	//	use column name as default
         AllowNulls = true;
         DefaultValue = DBNull.Value;
         NewKeyTarget = KeyTarget.Property;
      }

      /// <summary>
      /// The name of the database column to map to the property attribute.
      /// </summary>
      public string ColumnName { get; set; }

      /// <summary>
      /// The name of the stored procedure parameter associated with this attribute
      /// </summary>
      public string ParameterName { get; set; }

      /// <summary>
      /// Should the property be allowed to be DBNull.
      /// </summary>
      public bool AllowNulls { get; set; }

      /// <summary>
      /// Set the property to this value as a default.
      /// </summary>
      public object DefaultValue { get; set; }

      /// <summary>
      /// Is this column a primary key
      /// </summary>
      /// <value><c>true</c> if this instance is key; otherwise, <c>false</c>.</value>
      public bool IsKey { get; set; }

      /// <summary>
      /// Is this column's value autogenerated by the database. E.g. an identity column, or
      /// a column that is assigned a value in the insert stored procedure.
      /// </summary>
      /// <value><c>true</c> if identity; otherwise, <c>false</c>.</value>
      public bool IsAutoGenerated { get; set; }

      /// <summary>
      /// Method or property name to call to get a new key value
      /// </summary>
      /// <value>The new key.</value>
      public string NewKey { get; set; }

      /// <summary>
      /// Target for the NewKey method/property
      /// </summary>
      /// <value>The key target.</value>
      public KeyTarget NewKeyTarget { get; set; }
   }
}
